searchState.loadedDescShard("pallet_mandate", 0, "Handle the ability to notify other pallets that they …\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nThe <code>Event</code> enum of this pallet\nOrigin that can call this module and execute sudo actions. …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nA root operation was executed, show result\nLet the configured origin dispatch a call as root\nLet the configured origin dispatch a call as root\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>apply</code>.\nAuto-generated docs-only module listing all (public and …\nLet the configured origin dispatch a call as root")