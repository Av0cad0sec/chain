searchState.loadedDescShard("pallet_sponsorship", 0, "Require the sponsor to pay for their transactors.\nNo value.\nA pot details a sponsorship and its limits. The remained …\nSome value of type <code>T</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nAutogenerated weights for pallet_sponsorship\nBalance leak is not allowed during a sponsored call.\nContains a variant per dispatchable extrinsic that this …\nLogic error: cannot create proxy account for user. This …\nThe user is not removable due to holding some reserve.\nCannot update the fee limit most likely due to being below …\nCannot update the reserve limit most likely due to being …\nConfiguration trait of this pallet.\nThe currency mechanism, used for paying for reserves.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe pot ID is already taken.\nMigration is in progress.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe signing account has no permission to do the operation.\nThe <code>Pallet</code> struct, the main type that implements traits …\nEvent emitted when a new pot is created.\nThe deposit that must be locked in order to create a pot.\nIdentifier for the pots.\nThe pot does not exist.\nEvent emitted when a pot is removed.\nEvent emitted when a pot is updated.\nEvent emitted when a pot is updated.\nThe overarching call type.\nBecause this pallet emits events, it depends on the runtime…\nEvent emitted when a sponsor_me call has been successful …\nThe type for the categories of the calls that could be …\nEvent emitted when the transaction fee is paid showing the …\nThe user is already registered for the pot.\nThe deposit that must be reserved form the sponsor per …\nThe user is not registered for the pot.\nEvent emitted when fee_quota or reserve_quota or both are …\nEvent emitted when user/users are registered indicating …\nEvent emitted when user/users are removed indicating the …\nType representing the weight of this pallet\nCreate a new sponsorship pot and set its limits. The pot …\nCreate a new sponsorship pot and set its limits. The pot …\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a call with the variant <code>create_pot</code>.\nCreate a call with the variant <code>register_users</code>.\nCreate a call with the variant <code>remove_pot</code>.\nCreate a call with the variant <code>remove_users</code>.\nCreate a call with the variant <code>sponsor_for</code>.\nCreate a call with the variant <code>update_pot_limits</code>.\nCreate a call with the variant <code>update_sponsorship_type</code>.\nCreate a call with the variant <code>update_users_limits</code>.\nRegister users for a pot and set the same limit for the …\nRegister users for a pot and set the same limit for the …\nAllows the sponsor to remove the pot they have created …\nAllows the sponsor to remove the pot they have created …\nRemove users from a pot. Only pot sponsor can do this. …\nRemove users from a pot. Only pot sponsor can do this. …\nSponsor me for the given call from the specified pot. The …\nSponsor me for the given call from the specified pot. The …\nAuto-generated docs-only module listing all (public and …\nUpdate the pot details. Only the sponsor can do this. If …\nUpdate the pot details. Only the sponsor can do this. If …\nUpdate the pot’s sponsorship type. Only the sponsor can …\nUpdate the pot’s sponsorship type. Only the sponsor can …\nUpdate limits for a number of users in a single call. Only …\nUpdate limits for a number of users in a single call. Only …\nCreate a new sponsorship pot and set its limits. The pot …\nRegister users for a pot and set the same limit for the …\nAllows the sponsor to remove the pot they have created …\nRemove users from a pot. Only pot sponsor can do this. …\nSponsor me for the given call from the specified pot. The …\nUpdate the pot details. Only the sponsor can do this. If …\nUpdate the pot’s sponsorship type. Only the sponsor can …\nUpdate limits for a number of users in a single call. Only …\nDetails of a pot.\nWarning: Doc-Only\nUser details of a pot.\nStores the number of individual pots a user is registered …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeight functions for <code>pallet_sponsorship</code>.\nWeight functions needed for pallet_sponsorship.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe range of component <code>l</code> is <code>[1, 1000]</code>.\nThe range of component <code>l</code> is <code>[1, 1000]</code>.\nThe range of component <code>l</code> is <code>[1, 1000]</code>.")